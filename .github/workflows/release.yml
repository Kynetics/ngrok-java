name: Release
run-name: Release v${{ github.event.inputs.releaseVersion }}

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        required: true

jobs:
  deploy-all-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run mvn deploy (github)
        run: mvn --batch-mode deploy --activate-profiles ci-default,github-distro
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run mvn package native (github)
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=linux-x86_64" --define "ngrok.native.target=x86_64-unknown-linux-gnu"
      - name: Run mvn deploy native (github)
        run: mvn --batch-mode deploy:deploy-file --activate-profiles github-distro --define "url=https://maven.pkg.github.com/ngrok/ngrok-java" --define "repositoryId=github" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=linux-x86_64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Run mvn deploy (ossrh)
        run: mvn --batch-mode deploy --activate-profiles ci-default,central-distro
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
      - name: Run mvn package native (ossrh)
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=linux-x86_64" --define "ngrok.native.target=x86_64-unknown-linux-gnu"
      - name: Run mvn deploy native (ossrh)
        run: mvn --batch-mode gpg:sign-and-deploy-file --activate-profiles central-distro --define "url=https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/" --define "repositoryId=ossrh" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=linux-x86_64"
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}

  deploy-native-windows-x86:
    runs-on: windows-latest
    needs:
      - deploy-all-linux-x86
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=windows-x86_64" --define "ngrok.native.target=x86_64-pc-windows-msvc"
      - name: Run mvn deploy
        run: mvn --batch-mode deploy:deploy-file --activate-profiles github-distro --define "url=https://maven.pkg.github.com/ngrok/ngrok-java" --define "repositoryId=github" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_64.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=windows-x86_64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-native-windows-x32:
    runs-on: windows-latest
    needs:
      - deploy-all-linux-x86
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: i686-pc-windows-msvc
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=windows-x86_32" --define "ngrok.native.target=i686-pc-windows-msvc" --define "skipTests"
      - name: Run mvn deploy
        run: mvn --batch-mode deploy:deploy-file --activate-profiles github-distro --define "url=https://maven.pkg.github.com/ngrok/ngrok-java" --define "repositoryId=github" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_32.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=windows-x86_32"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-native-macos-x86:
    runs-on: macos-latest
    needs:
      - deploy-all-linux-x86
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-apple-darwin
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=osx-x86_64" --define "ngrok.native.target=x86_64-apple-darwin"
      - name: Run mvn deploy
        run: mvn --batch-mode deploy:deploy-file --activate-profiles github-distro --define "url=https://maven.pkg.github.com/ngrok/ngrok-java" --define "repositoryId=github" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-x86_64.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=osx-x86_64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-native-macos-arm64:
    runs-on: macos-latest
    needs:
      - deploy-all-linux-x86
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: aarch64-apple-darwin
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --update-snapshots --projects ngrok-java-native --also-make package --activate-profiles ci-native --define "ngrok.native.classifier=osx-aarch_64" --define "ngrok.native.target=aarch64-apple-darwin" --define "skipTests"
      - name: Run mvn deploy
        run: mvn --batch-mode deploy:deploy-file --activate-profiles github-distro --define "url=https://maven.pkg.github.com/ngrok/ngrok-java" --define "repositoryId=github" --define "generatePom=false" --define "file=ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-aarch_64.jar" --define "groupId=com.ngrok" --define "artifactId=ngrok-java-native" --define "version=${{ github.event.inputs.releaseVersion }}" --define "classifier=osx-aarch_64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
